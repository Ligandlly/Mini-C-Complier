//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Program.g4 by ANTLR 4.9

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ProgramParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9")]
[System.CLSCompliant(false)]
public interface IProgramListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ProgramParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ProgramParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] ProgramParser.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] ProgramParser.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_decl([NotNull] ProgramParser.Var_declContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_decl([NotNull] ProgramParser.Var_declContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_expr([NotNull] ProgramParser.Primary_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_expr([NotNull] ProgramParser.Primary_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_expr([NotNull] ProgramParser.Postfix_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_expr([NotNull] ProgramParser.Postfix_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.argument_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_expr_list([NotNull] ProgramParser.Argument_expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.argument_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_expr_list([NotNull] ProgramParser.Argument_expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_expr([NotNull] ProgramParser.Unary_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_expr([NotNull] ProgramParser.Unary_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.multiplicative_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicative_expr([NotNull] ProgramParser.Multiplicative_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.multiplicative_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicative_expr([NotNull] ProgramParser.Multiplicative_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.additive_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditive_expr([NotNull] ProgramParser.Additive_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.additive_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditive_expr([NotNull] ProgramParser.Additive_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.sft_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSft_expr([NotNull] ProgramParser.Sft_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.sft_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSft_expr([NotNull] ProgramParser.Sft_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.relational_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelational_expr([NotNull] ProgramParser.Relational_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.relational_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelational_expr([NotNull] ProgramParser.Relational_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] ProgramParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] ProgramParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] ProgramParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] ProgramParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExclusiveOrExpression([NotNull] ProgramParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExclusiveOrExpression([NotNull] ProgramParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclusiveOrExpression([NotNull] ProgramParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclusiveOrExpression([NotNull] ProgramParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndExpression([NotNull] ProgramParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndExpression([NotNull] ProgramParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrExpression([NotNull] ProgramParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrExpression([NotNull] ProgramParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalExpression([NotNull] ProgramParser.ConditionalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalExpression([NotNull] ProgramParser.ConditionalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] ProgramParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] ProgramParser.AssignmentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] ProgramParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] ProgramParser.AssignmentOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] ProgramParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] ProgramParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.func_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_def([NotNull] ProgramParser.Func_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.func_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_def([NotNull] ProgramParser.Func_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.compound_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompound_stmt([NotNull] ProgramParser.Compound_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.compound_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompound_stmt([NotNull] ProgramParser.Compound_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.block_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_item_list([NotNull] ProgramParser.Block_item_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.block_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_item_list([NotNull] ProgramParser.Block_item_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.block_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_item([NotNull] ProgramParser.Block_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.block_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_item([NotNull] ProgramParser.Block_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam_list([NotNull] ProgramParser.Param_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam_list([NotNull] ProgramParser.Param_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] ProgramParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] ProgramParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] ProgramParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] ProgramParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinue_stmt([NotNull] ProgramParser.Continue_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinue_stmt([NotNull] ProgramParser.Continue_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.break_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_stmt([NotNull] ProgramParser.Break_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.break_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_stmt([NotNull] ProgramParser.Break_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_stmt([NotNull] ProgramParser.Return_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_stmt([NotNull] ProgramParser.Return_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.expr_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_stmt([NotNull] ProgramParser.Expr_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.expr_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_stmt([NotNull] ProgramParser.Expr_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.selection_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelection_stmt([NotNull] ProgramParser.Selection_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.selection_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelection_stmt([NotNull] ProgramParser.Selection_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.iteration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIteration_stmt([NotNull] ProgramParser.Iteration_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.iteration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIteration_stmt([NotNull] ProgramParser.Iteration_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum([NotNull] ProgramParser.NumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum([NotNull] ProgramParser.NumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] ProgramParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] ProgramParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_spec([NotNull] ProgramParser.Type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_spec([NotNull] ProgramParser.Type_specContext context);
}
