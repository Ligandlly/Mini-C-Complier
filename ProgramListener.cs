//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Program.g4 by ANTLR 4.9

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ProgramParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9")]
[System.CLSCompliant(false)]
public interface IProgramListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ProgramParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ProgramParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] ProgramParser.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] ProgramParser.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>var_declHasId</c>
	/// labeled alternative in <see cref="ProgramParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_declHasId([NotNull] ProgramParser.Var_declHasIdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>var_declHasId</c>
	/// labeled alternative in <see cref="ProgramParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_declHasId([NotNull] ProgramParser.Var_declHasIdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>var_declHasArr</c>
	/// labeled alternative in <see cref="ProgramParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_declHasArr([NotNull] ProgramParser.Var_declHasArrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>var_declHasArr</c>
	/// labeled alternative in <see cref="ProgramParser.var_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_declHasArr([NotNull] ProgramParser.Var_declHasArrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>primary_exprHasExpr</c>
	/// labeled alternative in <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_exprHasExpr([NotNull] ProgramParser.Primary_exprHasExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>primary_exprHasExpr</c>
	/// labeled alternative in <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_exprHasExpr([NotNull] ProgramParser.Primary_exprHasExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>primary_exprHasId</c>
	/// labeled alternative in <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_exprHasId([NotNull] ProgramParser.Primary_exprHasIdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>primary_exprHasId</c>
	/// labeled alternative in <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_exprHasId([NotNull] ProgramParser.Primary_exprHasIdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>primary_exprHasNum</c>
	/// labeled alternative in <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_exprHasNum([NotNull] ProgramParser.Primary_exprHasNumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>primary_exprHasNum</c>
	/// labeled alternative in <see cref="ProgramParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_exprHasNum([NotNull] ProgramParser.Primary_exprHasNumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>postfix_exprHasPrimary_expr</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_exprHasPrimary_expr([NotNull] ProgramParser.Postfix_exprHasPrimary_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postfix_exprHasPrimary_expr</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_exprHasPrimary_expr([NotNull] ProgramParser.Postfix_exprHasPrimary_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>postfix_exprHasgetitem</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_exprHasgetitem([NotNull] ProgramParser.Postfix_exprHasgetitemContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postfix_exprHasgetitem</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_exprHasgetitem([NotNull] ProgramParser.Postfix_exprHasgetitemContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>postfix_exprHasEmptyCall</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_exprHasEmptyCall([NotNull] ProgramParser.Postfix_exprHasEmptyCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postfix_exprHasEmptyCall</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_exprHasEmptyCall([NotNull] ProgramParser.Postfix_exprHasEmptyCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>postfix_exprHasCall</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_exprHasCall([NotNull] ProgramParser.Postfix_exprHasCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postfix_exprHasCall</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_exprHasCall([NotNull] ProgramParser.Postfix_exprHasCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>postfix_exprHasInc</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_exprHasInc([NotNull] ProgramParser.Postfix_exprHasIncContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postfix_exprHasInc</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_exprHasInc([NotNull] ProgramParser.Postfix_exprHasIncContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>postfix_exprHasDec</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfix_exprHasDec([NotNull] ProgramParser.Postfix_exprHasDecContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>postfix_exprHasDec</c>
	/// labeled alternative in <see cref="ProgramParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfix_exprHasDec([NotNull] ProgramParser.Postfix_exprHasDecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.argument_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_expr_list([NotNull] ProgramParser.Argument_expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.argument_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_expr_list([NotNull] ProgramParser.Argument_expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unary_exprHasPostfix_expr</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_exprHasPostfix_expr([NotNull] ProgramParser.Unary_exprHasPostfix_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unary_exprHasPostfix_expr</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_exprHasPostfix_expr([NotNull] ProgramParser.Unary_exprHasPostfix_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unary_exprHasInc</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_exprHasInc([NotNull] ProgramParser.Unary_exprHasIncContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unary_exprHasInc</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_exprHasInc([NotNull] ProgramParser.Unary_exprHasIncContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unary_exprHasDec</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_exprHasDec([NotNull] ProgramParser.Unary_exprHasDecContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unary_exprHasDec</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_exprHasDec([NotNull] ProgramParser.Unary_exprHasDecContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unary_exprHasDol</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_exprHasDol([NotNull] ProgramParser.Unary_exprHasDolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unary_exprHasDol</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_exprHasDol([NotNull] ProgramParser.Unary_exprHasDolContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unary_exprHasLNot</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_exprHasLNot([NotNull] ProgramParser.Unary_exprHasLNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unary_exprHasLNot</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_exprHasLNot([NotNull] ProgramParser.Unary_exprHasLNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unary_exprHasNot</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_exprHasNot([NotNull] ProgramParser.Unary_exprHasNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unary_exprHasNot</c>
	/// labeled alternative in <see cref="ProgramParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_exprHasNot([NotNull] ProgramParser.Unary_exprHasNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasLsft</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasLsft([NotNull] ProgramParser.AssignmentExprHasLsftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasLsft</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasLsft([NotNull] ProgramParser.AssignmentExprHasLsftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasLt</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasLt([NotNull] ProgramParser.AssignmentExprHasLtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasLt</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasLt([NotNull] ProgramParser.AssignmentExprHasLtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasAssign</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasAssign([NotNull] ProgramParser.AssignmentExprHasAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasAssign</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasAssign([NotNull] ProgramParser.AssignmentExprHasAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasEq</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasEq([NotNull] ProgramParser.AssignmentExprHasEqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasEq</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasEq([NotNull] ProgramParser.AssignmentExprHasEqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasGt</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasGt([NotNull] ProgramParser.AssignmentExprHasGtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasGt</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasGt([NotNull] ProgramParser.AssignmentExprHasGtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasUnary_expr</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasUnary_expr([NotNull] ProgramParser.AssignmentExprHasUnary_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasUnary_expr</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasUnary_expr([NotNull] ProgramParser.AssignmentExprHasUnary_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasLOr</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasLOr([NotNull] ProgramParser.AssignmentExprHasLOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasLOr</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasLOr([NotNull] ProgramParser.AssignmentExprHasLOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasDiv</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasDiv([NotNull] ProgramParser.AssignmentExprHasDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasDiv</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasDiv([NotNull] ProgramParser.AssignmentExprHasDivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasMin</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasMin([NotNull] ProgramParser.AssignmentExprHasMinContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasMin</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasMin([NotNull] ProgramParser.AssignmentExprHasMinContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasAnd</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasAnd([NotNull] ProgramParser.AssignmentExprHasAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasAnd</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasAnd([NotNull] ProgramParser.AssignmentExprHasAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasNe</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasNe([NotNull] ProgramParser.AssignmentExprHasNeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasNe</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasNe([NotNull] ProgramParser.AssignmentExprHasNeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasLAnd</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasLAnd([NotNull] ProgramParser.AssignmentExprHasLAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasLAnd</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasLAnd([NotNull] ProgramParser.AssignmentExprHasLAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasLe</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasLe([NotNull] ProgramParser.AssignmentExprHasLeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasLe</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasLe([NotNull] ProgramParser.AssignmentExprHasLeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasXor</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasXor([NotNull] ProgramParser.AssignmentExprHasXorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasXor</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasXor([NotNull] ProgramParser.AssignmentExprHasXorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasGe</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasGe([NotNull] ProgramParser.AssignmentExprHasGeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasGe</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasGe([NotNull] ProgramParser.AssignmentExprHasGeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasRsft</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasRsft([NotNull] ProgramParser.AssignmentExprHasRsftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasRsft</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasRsft([NotNull] ProgramParser.AssignmentExprHasRsftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasAdd</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasAdd([NotNull] ProgramParser.AssignmentExprHasAddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasAdd</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasAdd([NotNull] ProgramParser.AssignmentExprHasAddContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasMod</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasMod([NotNull] ProgramParser.AssignmentExprHasModContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasMod</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasMod([NotNull] ProgramParser.AssignmentExprHasModContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasOr</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasOr([NotNull] ProgramParser.AssignmentExprHasOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasOr</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasOr([NotNull] ProgramParser.AssignmentExprHasOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasNum</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasNum([NotNull] ProgramParser.AssignmentExprHasNumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasNum</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasNum([NotNull] ProgramParser.AssignmentExprHasNumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentExprHasMul</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExprHasMul([NotNull] ProgramParser.AssignmentExprHasMulContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentExprHasMul</c>
	/// labeled alternative in <see cref="ProgramParser.assignmentExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExprHasMul([NotNull] ProgramParser.AssignmentExprHasMulContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] ProgramParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] ProgramParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.func_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunc_def([NotNull] ProgramParser.Func_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.func_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunc_def([NotNull] ProgramParser.Func_defContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>compound_stmtHasEmpty</c>
	/// labeled alternative in <see cref="ProgramParser.compound_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompound_stmtHasEmpty([NotNull] ProgramParser.Compound_stmtHasEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compound_stmtHasEmpty</c>
	/// labeled alternative in <see cref="ProgramParser.compound_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompound_stmtHasEmpty([NotNull] ProgramParser.Compound_stmtHasEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>compound_stmtHasBody</c>
	/// labeled alternative in <see cref="ProgramParser.compound_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompound_stmtHasBody([NotNull] ProgramParser.Compound_stmtHasBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compound_stmtHasBody</c>
	/// labeled alternative in <see cref="ProgramParser.compound_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompound_stmtHasBody([NotNull] ProgramParser.Compound_stmtHasBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.block_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_item_list([NotNull] ProgramParser.Block_item_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.block_item_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_item_list([NotNull] ProgramParser.Block_item_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.block_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock_item([NotNull] ProgramParser.Block_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.block_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock_item([NotNull] ProgramParser.Block_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>param_listHasEmpty</c>
	/// labeled alternative in <see cref="ProgramParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam_listHasEmpty([NotNull] ProgramParser.Param_listHasEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>param_listHasEmpty</c>
	/// labeled alternative in <see cref="ProgramParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam_listHasEmpty([NotNull] ProgramParser.Param_listHasEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>param_listHasBody</c>
	/// labeled alternative in <see cref="ProgramParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam_listHasBody([NotNull] ProgramParser.Param_listHasBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>param_listHasBody</c>
	/// labeled alternative in <see cref="ProgramParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam_listHasBody([NotNull] ProgramParser.Param_listHasBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] ProgramParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] ProgramParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] ProgramParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] ProgramParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinue_stmt([NotNull] ProgramParser.Continue_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.continue_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinue_stmt([NotNull] ProgramParser.Continue_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.break_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_stmt([NotNull] ProgramParser.Break_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.break_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_stmt([NotNull] ProgramParser.Break_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_stmt([NotNull] ProgramParser.Return_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_stmt([NotNull] ProgramParser.Return_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.expr_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_stmt([NotNull] ProgramParser.Expr_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.expr_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_stmt([NotNull] ProgramParser.Expr_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>selection_stmtHasElse</c>
	/// labeled alternative in <see cref="ProgramParser.selection_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelection_stmtHasElse([NotNull] ProgramParser.Selection_stmtHasElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>selection_stmtHasElse</c>
	/// labeled alternative in <see cref="ProgramParser.selection_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelection_stmtHasElse([NotNull] ProgramParser.Selection_stmtHasElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>selection_stmtHasEmpty</c>
	/// labeled alternative in <see cref="ProgramParser.selection_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelection_stmtHasEmpty([NotNull] ProgramParser.Selection_stmtHasEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>selection_stmtHasEmpty</c>
	/// labeled alternative in <see cref="ProgramParser.selection_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelection_stmtHasEmpty([NotNull] ProgramParser.Selection_stmtHasEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.iteration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIteration_stmt([NotNull] ProgramParser.Iteration_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.iteration_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIteration_stmt([NotNull] ProgramParser.Iteration_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum([NotNull] ProgramParser.NumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum([NotNull] ProgramParser.NumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] ProgramParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] ProgramParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_spec([NotNull] ProgramParser.Type_specContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_spec([NotNull] ProgramParser.Type_specContext context);
}
