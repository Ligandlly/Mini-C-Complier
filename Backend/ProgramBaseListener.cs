//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\Program.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Backend {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IProgramListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ProgramBaseListener : IProgramListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] ProgramParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] ProgramParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] ProgramParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] ProgramParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecl([NotNull] ProgramParser.DeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecl([NotNull] ProgramParser.DeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>localVarDecl</c>
	/// labeled alternative in <see cref="ProgramParser.variableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalVarDecl([NotNull] ProgramParser.LocalVarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>localVarDecl</c>
	/// labeled alternative in <see cref="ProgramParser.variableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalVarDecl([NotNull] ProgramParser.LocalVarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>localArrDecl</c>
	/// labeled alternative in <see cref="ProgramParser.variableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalArrDecl([NotNull] ProgramParser.LocalArrDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>localArrDecl</c>
	/// labeled alternative in <see cref="ProgramParser.variableDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalArrDecl([NotNull] ProgramParser.LocalArrDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayParam</c>
	/// labeled alternative in <see cref="ProgramParser.paramDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayParam([NotNull] ProgramParser.ArrayParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayParam</c>
	/// labeled alternative in <see cref="ProgramParser.paramDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayParam([NotNull] ProgramParser.ArrayParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>variableParam</c>
	/// labeled alternative in <see cref="ProgramParser.paramDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableParam([NotNull] ProgramParser.VariableParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableParam</c>
	/// labeled alternative in <see cref="ProgramParser.paramDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableParam([NotNull] ProgramParser.VariableParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.funcTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncTail([NotNull] ProgramParser.FuncTailContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.funcTail"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncTail([NotNull] ProgramParser.FuncTailContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.funcHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncHead([NotNull] ProgramParser.FuncHeadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.funcHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncHead([NotNull] ProgramParser.FuncHeadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.funcDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncDef([NotNull] ProgramParser.FuncDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.funcDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncDef([NotNull] ProgramParser.FuncDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.quaternary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuaternary([NotNull] ProgramParser.QuaternaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.quaternary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuaternary([NotNull] ProgramParser.QuaternaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.literalAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralAssignment([NotNull] ProgramParser.LiteralAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.literalAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralAssignment([NotNull] ProgramParser.LiteralAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableAssignment([NotNull] ProgramParser.VariableAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableAssignment([NotNull] ProgramParser.VariableAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>digitAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigitAddOrMinus([NotNull] ProgramParser.DigitAddOrMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>digitAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigitAddOrMinus([NotNull] ProgramParser.DigitAddOrMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idFirstAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdFirstAddOrMinus([NotNull] ProgramParser.IdFirstAddOrMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idFirstAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdFirstAddOrMinus([NotNull] ProgramParser.IdFirstAddOrMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numFirstAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumFirstAddOrMinus([NotNull] ProgramParser.NumFirstAddOrMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numFirstAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumFirstAddOrMinus([NotNull] ProgramParser.NumFirstAddOrMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdAddOrMinus([NotNull] ProgramParser.IdAddOrMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idAddOrMinus</c>
	/// labeled alternative in <see cref="ProgramParser.addOrMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdAddOrMinus([NotNull] ProgramParser.IdAddOrMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>digitMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigitMultiple([NotNull] ProgramParser.DigitMultipleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>digitMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigitMultiple([NotNull] ProgramParser.DigitMultipleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idFirstMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdFirstMultiple([NotNull] ProgramParser.IdFirstMultipleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idFirstMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdFirstMultiple([NotNull] ProgramParser.IdFirstMultipleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numFirstMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumFirstMultiple([NotNull] ProgramParser.NumFirstMultipleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numFirstMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumFirstMultiple([NotNull] ProgramParser.NumFirstMultipleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdMultiple([NotNull] ProgramParser.IdMultipleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idMultiple</c>
	/// labeled alternative in <see cref="ProgramParser.multiple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdMultiple([NotNull] ProgramParser.IdMultipleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>digitDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigitDivide([NotNull] ProgramParser.DigitDivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>digitDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigitDivide([NotNull] ProgramParser.DigitDivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idFirstDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdFirstDivide([NotNull] ProgramParser.IdFirstDivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idFirstDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdFirstDivide([NotNull] ProgramParser.IdFirstDivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numFirstDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumFirstDivide([NotNull] ProgramParser.NumFirstDivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numFirstDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumFirstDivide([NotNull] ProgramParser.NumFirstDivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdDivide([NotNull] ProgramParser.IdDivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idDivide</c>
	/// labeled alternative in <see cref="ProgramParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdDivide([NotNull] ProgramParser.IdDivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>variableReturn</c>
	/// labeled alternative in <see cref="ProgramParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableReturn([NotNull] ProgramParser.VariableReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableReturn</c>
	/// labeled alternative in <see cref="ProgramParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableReturn([NotNull] ProgramParser.VariableReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>literalReturn</c>
	/// labeled alternative in <see cref="ProgramParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralReturn([NotNull] ProgramParser.LiteralReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>literalReturn</c>
	/// labeled alternative in <see cref="ProgramParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralReturn([NotNull] ProgramParser.LiteralReturnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>digitJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigitJumpEqual([NotNull] ProgramParser.DigitJumpEqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>digitJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigitJumpEqual([NotNull] ProgramParser.DigitJumpEqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idFirstJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdFirstJumpEqual([NotNull] ProgramParser.IdFirstJumpEqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idFirstJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdFirstJumpEqual([NotNull] ProgramParser.IdFirstJumpEqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numFirstJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumFirstJumpEqual([NotNull] ProgramParser.NumFirstJumpEqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numFirstJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumFirstJumpEqual([NotNull] ProgramParser.NumFirstJumpEqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdJumpEqual([NotNull] ProgramParser.IdJumpEqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idJumpEqual</c>
	/// labeled alternative in <see cref="ProgramParser.jumpEqual"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdJumpEqual([NotNull] ProgramParser.IdJumpEqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] ProgramParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] ProgramParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall([NotNull] ProgramParser.CallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall([NotNull] ProgramParser.CallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnd([NotNull] ProgramParser.EndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnd([NotNull] ProgramParser.EndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] ProgramParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] ProgramParser.VariableContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Backend
