//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .\Program.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Backend {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class ProgramLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, Label=13, Type=14, AdditaveOp=15, DivideOp=16, 
		Num=17, Id=18, Whitespace=19, Newline=20;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "Label", "Type", "AdditaveOp", "DivideOp", "Num", 
		"Digit", "Id", "Letter", "Whitespace", "Newline"
	};


	public ProgramLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ProgramLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'decl_var'", "';'", "'@'", "'decl_arr'", "'param_decl'", "'end_func'", 
		"'func'", "'='", "'*'", "'return'", "'Je'", "'end'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "Label", "Type", "AdditaveOp", "DivideOp", "Num", "Id", "Whitespace", 
		"Newline"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Program.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ProgramLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\xB4', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', 
		'\x5', '\xF', '\x8A', '\n', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x10', '\x5', '\x10', '\x91', '\n', '\x10', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x6', '\x12', '\x96', '\n', 
		'\x12', '\r', '\x12', '\xE', '\x12', '\x97', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x14', '\x3', '\x14', '\a', '\x14', '\x9E', '\n', '\x14', '\f', 
		'\x14', '\xE', '\x14', '\xA1', '\v', '\x14', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x16', '\x6', '\x16', '\xA6', '\n', '\x16', '\r', '\x16', '\xE', 
		'\x16', '\xA7', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x5', '\x17', '\xAE', '\n', '\x17', '\x3', '\x17', '\x5', '\x17', '\xB1', 
		'\n', '\x17', '\x3', '\x17', '\x3', '\x17', '\x2', '\x2', '\x18', '\x3', 
		'\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', 
		'\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x2', '\'', '\x14', ')', '\x2', '+', '\x15', '-', '\x16', 
		'\x3', '\x2', '\b', '\a', '\x2', '(', '(', '-', '-', '/', '/', '`', '`', 
		'~', '~', '\x4', '\x2', '\'', '\'', '\x31', '\x31', '\x3', '\x2', '\x32', 
		';', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x5', '\x2', '\x32', ';', 
		'\x43', '\\', '\x63', '|', '\x4', '\x2', '\v', '\v', '\"', '\"', '\x2', 
		'\xBB', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'-', '\x3', '\x2', '\x2', '\x2', '\x3', '/', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '\x38', '\x3', '\x2', '\x2', '\x2', '\a', ':', '\x3', '\x2', '\x2', 
		'\x2', '\t', '<', '\x3', '\x2', '\x2', '\x2', '\v', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\r', 'P', '\x3', '\x2', '\x2', '\x2', '\xF', 'Y', '\x3', 
		'\x2', '\x2', '\x2', '\x11', '^', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'`', '\x3', '\x2', '\x2', '\x2', '\x15', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '\x17', 'i', '\x3', '\x2', '\x2', '\x2', '\x19', 'l', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', 'p', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x89', 
		'\x3', '\x2', '\x2', '\x2', '\x1F', '\x90', '\x3', '\x2', '\x2', '\x2', 
		'!', '\x92', '\x3', '\x2', '\x2', '\x2', '#', '\x95', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x99', '\x3', '\x2', '\x2', '\x2', '\'', '\x9B', '\x3', '\x2', 
		'\x2', '\x2', ')', '\xA2', '\x3', '\x2', '\x2', '\x2', '+', '\xA5', '\x3', 
		'\x2', '\x2', '\x2', '-', '\xB0', '\x3', '\x2', '\x2', '\x2', '/', '\x30', 
		'\a', '\x66', '\x2', '\x2', '\x30', '\x31', '\a', 'g', '\x2', '\x2', '\x31', 
		'\x32', '\a', '\x65', '\x2', '\x2', '\x32', '\x33', '\a', 'n', '\x2', 
		'\x2', '\x33', '\x34', '\a', '\x61', '\x2', '\x2', '\x34', '\x35', '\a', 
		'x', '\x2', '\x2', '\x35', '\x36', '\a', '\x63', '\x2', '\x2', '\x36', 
		'\x37', '\a', 't', '\x2', '\x2', '\x37', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'\x38', '\x39', '\a', '=', '\x2', '\x2', '\x39', '\x6', '\x3', '\x2', 
		'\x2', '\x2', ':', ';', '\a', '\x42', '\x2', '\x2', ';', '\b', '\x3', 
		'\x2', '\x2', '\x2', '<', '=', '\a', '\x66', '\x2', '\x2', '=', '>', '\a', 
		'g', '\x2', '\x2', '>', '?', '\a', '\x65', '\x2', '\x2', '?', '@', '\a', 
		'n', '\x2', '\x2', '@', '\x41', '\a', '\x61', '\x2', '\x2', '\x41', '\x42', 
		'\a', '\x63', '\x2', '\x2', '\x42', '\x43', '\a', 't', '\x2', '\x2', '\x43', 
		'\x44', '\a', 't', '\x2', '\x2', '\x44', '\n', '\x3', '\x2', '\x2', '\x2', 
		'\x45', '\x46', '\a', 'r', '\x2', '\x2', '\x46', 'G', '\a', '\x63', '\x2', 
		'\x2', 'G', 'H', '\a', 't', '\x2', '\x2', 'H', 'I', '\a', '\x63', '\x2', 
		'\x2', 'I', 'J', '\a', 'o', '\x2', '\x2', 'J', 'K', '\a', '\x61', '\x2', 
		'\x2', 'K', 'L', '\a', '\x66', '\x2', '\x2', 'L', 'M', '\a', 'g', '\x2', 
		'\x2', 'M', 'N', '\a', '\x65', '\x2', '\x2', 'N', 'O', '\a', 'n', '\x2', 
		'\x2', 'O', '\f', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\a', 'g', '\x2', 
		'\x2', 'Q', 'R', '\a', 'p', '\x2', '\x2', 'R', 'S', '\a', '\x66', '\x2', 
		'\x2', 'S', 'T', '\a', '\x61', '\x2', '\x2', 'T', 'U', '\a', 'h', '\x2', 
		'\x2', 'U', 'V', '\a', 'w', '\x2', '\x2', 'V', 'W', '\a', 'p', '\x2', 
		'\x2', 'W', 'X', '\a', '\x65', '\x2', '\x2', 'X', '\xE', '\x3', '\x2', 
		'\x2', '\x2', 'Y', 'Z', '\a', 'h', '\x2', '\x2', 'Z', '[', '\a', 'w', 
		'\x2', '\x2', '[', '\\', '\a', 'p', '\x2', '\x2', '\\', ']', '\a', '\x65', 
		'\x2', '\x2', ']', '\x10', '\x3', '\x2', '\x2', '\x2', '^', '_', '\a', 
		'?', '\x2', '\x2', '_', '\x12', '\x3', '\x2', '\x2', '\x2', '`', '\x61', 
		'\a', ',', '\x2', '\x2', '\x61', '\x14', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'\x63', '\a', 't', '\x2', '\x2', '\x63', '\x64', '\a', 'g', '\x2', '\x2', 
		'\x64', '\x65', '\a', 'v', '\x2', '\x2', '\x65', '\x66', '\a', 'w', '\x2', 
		'\x2', '\x66', 'g', '\a', 't', '\x2', '\x2', 'g', 'h', '\a', 'p', '\x2', 
		'\x2', 'h', '\x16', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\a', 'L', '\x2', 
		'\x2', 'j', 'k', '\a', 'g', '\x2', '\x2', 'k', '\x18', '\x3', '\x2', '\x2', 
		'\x2', 'l', 'm', '\a', 'g', '\x2', '\x2', 'm', 'n', '\a', 'p', '\x2', 
		'\x2', 'n', 'o', '\a', '\x66', '\x2', '\x2', 'o', '\x1A', '\x3', '\x2', 
		'\x2', '\x2', 'p', 'q', '\a', 'n', '\x2', '\x2', 'q', 'r', '\a', '\x63', 
		'\x2', '\x2', 'r', 's', '\a', '\x64', '\x2', '\x2', 's', 't', '\a', 'g', 
		'\x2', '\x2', 't', 'u', '\a', 'n', '\x2', '\x2', 'u', 'v', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'w', '\x5', '#', '\x12', '\x2', 'w', 'x', '\a', '<', 
		'\x2', '\x2', 'x', '\x1C', '\x3', '\x2', '\x2', '\x2', 'y', 'z', '\a', 
		'k', '\x2', '\x2', 'z', '{', '\a', 'p', '\x2', '\x2', '{', '\x8A', '\a', 
		'v', '\x2', '\x2', '|', '}', '\a', 'u', '\x2', '\x2', '}', '~', '\a', 
		'j', '\x2', '\x2', '~', '\x7F', '\a', 'q', '\x2', '\x2', '\x7F', '\x80', 
		'\a', 't', '\x2', '\x2', '\x80', '\x8A', '\a', 'v', '\x2', '\x2', '\x81', 
		'\x82', '\a', '\x65', '\x2', '\x2', '\x82', '\x83', '\a', 'j', '\x2', 
		'\x2', '\x83', '\x84', '\a', '\x63', '\x2', '\x2', '\x84', '\x8A', '\a', 
		't', '\x2', '\x2', '\x85', '\x86', '\a', 'x', '\x2', '\x2', '\x86', '\x87', 
		'\a', 'q', '\x2', '\x2', '\x87', '\x88', '\a', 'k', '\x2', '\x2', '\x88', 
		'\x8A', '\a', '\x66', '\x2', '\x2', '\x89', 'y', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '|', '\x3', '\x2', '\x2', '\x2', '\x89', '\x81', '\x3', 
		'\x2', '\x2', '\x2', '\x89', '\x85', '\x3', '\x2', '\x2', '\x2', '\x8A', 
		'\x1E', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x91', '\t', '\x2', '\x2', 
		'\x2', '\x8C', '\x8D', '\a', '>', '\x2', '\x2', '\x8D', '\x91', '\a', 
		'>', '\x2', '\x2', '\x8E', '\x8F', '\a', '@', '\x2', '\x2', '\x8F', '\x91', 
		'\a', '@', '\x2', '\x2', '\x90', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x8C', '\x3', '\x2', '\x2', '\x2', '\x90', '\x8E', '\x3', '\x2', '\x2', 
		'\x2', '\x91', ' ', '\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\t', 
		'\x3', '\x2', '\x2', '\x93', '\"', '\x3', '\x2', '\x2', '\x2', '\x94', 
		'\x96', '\x5', '%', '\x13', '\x2', '\x95', '\x94', '\x3', '\x2', '\x2', 
		'\x2', '\x96', '\x97', '\x3', '\x2', '\x2', '\x2', '\x97', '\x95', '\x3', 
		'\x2', '\x2', '\x2', '\x97', '\x98', '\x3', '\x2', '\x2', '\x2', '\x98', 
		'$', '\x3', '\x2', '\x2', '\x2', '\x99', '\x9A', '\t', '\x4', '\x2', '\x2', 
		'\x9A', '&', '\x3', '\x2', '\x2', '\x2', '\x9B', '\x9F', '\t', '\x5', 
		'\x2', '\x2', '\x9C', '\x9E', '\x5', ')', '\x15', '\x2', '\x9D', '\x9C', 
		'\x3', '\x2', '\x2', '\x2', '\x9E', '\xA1', '\x3', '\x2', '\x2', '\x2', 
		'\x9F', '\x9D', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\x3', '\x2', 
		'\x2', '\x2', '\xA0', '(', '\x3', '\x2', '\x2', '\x2', '\xA1', '\x9F', 
		'\x3', '\x2', '\x2', '\x2', '\xA2', '\xA3', '\t', '\x6', '\x2', '\x2', 
		'\xA3', '*', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA6', '\t', '\a', '\x2', 
		'\x2', '\xA5', '\xA4', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA7', '\x3', 
		'\x2', '\x2', '\x2', '\xA7', '\xA5', '\x3', '\x2', '\x2', '\x2', '\xA7', 
		'\xA8', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xA9', '\x3', '\x2', '\x2', 
		'\x2', '\xA9', '\xAA', '\b', '\x16', '\x2', '\x2', '\xAA', ',', '\x3', 
		'\x2', '\x2', '\x2', '\xAB', '\xAD', '\a', '\xF', '\x2', '\x2', '\xAC', 
		'\xAE', '\a', '\f', '\x2', '\x2', '\xAD', '\xAC', '\x3', '\x2', '\x2', 
		'\x2', '\xAD', '\xAE', '\x3', '\x2', '\x2', '\x2', '\xAE', '\xB1', '\x3', 
		'\x2', '\x2', '\x2', '\xAF', '\xB1', '\a', '\f', '\x2', '\x2', '\xB0', 
		'\xAB', '\x3', '\x2', '\x2', '\x2', '\xB0', '\xAF', '\x3', '\x2', '\x2', 
		'\x2', '\xB1', '\xB2', '\x3', '\x2', '\x2', '\x2', '\xB2', '\xB3', '\b', 
		'\x17', '\x2', '\x2', '\xB3', '.', '\x3', '\x2', '\x2', '\x2', '\n', '\x2', 
		'\x89', '\x90', '\x97', '\x9F', '\xA7', '\xAD', '\xB0', '\x3', '\b', '\x2', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Backend
