//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Program.g4 by ANTLR 4.9

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IProgramListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ProgramBaseListener : IProgramListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] ProgramParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] ProgramParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecl([NotNull] ProgramParser.DeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecl([NotNull] ProgramParser.DeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.var_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar_decl([NotNull] ProgramParser.Var_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.var_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar_decl([NotNull] ProgramParser.Var_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.primary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expr([NotNull] ProgramParser.Primary_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.primary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expr([NotNull] ProgramParser.Primary_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.postfix_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfix_expr([NotNull] ProgramParser.Postfix_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.postfix_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfix_expr([NotNull] ProgramParser.Postfix_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.argument_expr_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_expr_list([NotNull] ProgramParser.Argument_expr_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.argument_expr_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_expr_list([NotNull] ProgramParser.Argument_expr_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.unary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expr([NotNull] ProgramParser.Unary_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.unary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expr([NotNull] ProgramParser.Unary_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.multiplicative_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicative_expr([NotNull] ProgramParser.Multiplicative_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.multiplicative_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicative_expr([NotNull] ProgramParser.Multiplicative_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.additive_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_expr([NotNull] ProgramParser.Additive_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.additive_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_expr([NotNull] ProgramParser.Additive_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.sft_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSft_expr([NotNull] ProgramParser.Sft_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.sft_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSft_expr([NotNull] ProgramParser.Sft_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.relational_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_expr([NotNull] ProgramParser.Relational_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.relational_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_expr([NotNull] ProgramParser.Relational_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] ProgramParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] ProgramParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.andExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpression([NotNull] ProgramParser.AndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.andExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpression([NotNull] ProgramParser.AndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.exclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusiveOrExpression([NotNull] ProgramParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.exclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusiveOrExpression([NotNull] ProgramParser.ExclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.inclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusiveOrExpression([NotNull] ProgramParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.inclusiveOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusiveOrExpression([NotNull] ProgramParser.InclusiveOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.logicalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAndExpression([NotNull] ProgramParser.LogicalAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.logicalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAndExpression([NotNull] ProgramParser.LogicalAndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.logicalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOrExpression([NotNull] ProgramParser.LogicalOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.logicalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOrExpression([NotNull] ProgramParser.LogicalOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalExpression([NotNull] ProgramParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.conditionalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalExpression([NotNull] ProgramParser.ConditionalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] ProgramParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] ProgramParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperator([NotNull] ProgramParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperator([NotNull] ProgramParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] ProgramParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] ProgramParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.func_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_def([NotNull] ProgramParser.Func_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.func_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_def([NotNull] ProgramParser.Func_defContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.compound_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_stmt([NotNull] ProgramParser.Compound_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.compound_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_stmt([NotNull] ProgramParser.Compound_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.block_item_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock_item_list([NotNull] ProgramParser.Block_item_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.block_item_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock_item_list([NotNull] ProgramParser.Block_item_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.block_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock_item([NotNull] ProgramParser.Block_itemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.block_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock_item([NotNull] ProgramParser.Block_itemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam_list([NotNull] ProgramParser.Param_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.param_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam_list([NotNull] ProgramParser.Param_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] ProgramParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] ProgramParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] ProgramParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] ProgramParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.continue_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinue_stmt([NotNull] ProgramParser.Continue_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.continue_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinue_stmt([NotNull] ProgramParser.Continue_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.break_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreak_stmt([NotNull] ProgramParser.Break_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.break_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreak_stmt([NotNull] ProgramParser.Break_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.return_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_stmt([NotNull] ProgramParser.Return_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.return_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_stmt([NotNull] ProgramParser.Return_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.expr_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr_stmt([NotNull] ProgramParser.Expr_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.expr_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr_stmt([NotNull] ProgramParser.Expr_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.selection_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelection_stmt([NotNull] ProgramParser.Selection_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.selection_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelection_stmt([NotNull] ProgramParser.Selection_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.iteration_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIteration_stmt([NotNull] ProgramParser.Iteration_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.iteration_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIteration_stmt([NotNull] ProgramParser.Iteration_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] ProgramParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] ProgramParser.NumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] ProgramParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] ProgramParser.IdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ProgramParser.type_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_spec([NotNull] ProgramParser.Type_specContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ProgramParser.type_spec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_spec([NotNull] ProgramParser.Type_specContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
